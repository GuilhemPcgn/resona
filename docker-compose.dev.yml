version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: deps
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://backend:3001
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    depends_on:
      - backend
    networks:
      - resona-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: deps
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    command: npm run start:dev
    env_file:
      - .env
    networks:
      - resona-network

  # Service Supabase local (optionnel)
  supabase:
    image: supabase/postgres:15.1.0.117
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=your-super-secret-and-long-postgres-password
      - POSTGRES_DB=postgres
    volumes:
      - supabase_data:/var/lib/postgresql/data
    networks:
      - resona-network

networks:
  resona-network:
    driver: bridge

volumes:
  supabase_data:
